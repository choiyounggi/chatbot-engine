plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.yk'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

configurations.all {
	exclude group: 'org.slf4j', module: 'slf4j-simple'
}

repositories {
	mavenCentral()
	maven { url "https://jitpack.io" }  // KOMORAN 라이브러리를 위한 저장소
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'
	implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.15'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

	// KOMORAN 형태소 분석기 - 정확한 버전 지정
	implementation 'com.github.shin285:KOMORAN:3.3.9'
	
	// OpenAI API 클라이언트
	implementation 'io.github.sashirestela:simple-openai:3.19.4'
	implementation 'com.squareup.okhttp3:okhttp:4.12.0'
	implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
	implementation 'com.squareup.okio:okio:3.6.0'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}